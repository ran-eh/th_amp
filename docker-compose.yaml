version: "3.9"

services:
  weather:
    image: weather-dev
    container_name: weather-dev
    build: ./weather
    # build:
    #   context: ./weather
    #   target: develop
    ports:
      - 5678:5678
    volumes:
      - .:/weather
    depends_on:
      - db
    environment:
      PG_HOST: db
      PG_DATABASE: weather
      PG_USER: postgres
      PG_PASSWORD: postgres
      API_KEY: MD8gOfRQx4yZ0lS8CfXv6OkVtBLCIdw8 
    # entrypoint: [ "python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "weather.py",  "--wait-for-client", "--multiprocess", "-m"]
    # networks:
    #   - weather-dev
  db:
    image: postgres:13-alpine
    # build: ./db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: weather
      PG_PASSWORD: postgres
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    command: ["postgres", "-c", "log_statement=all"]
    volumes:
      - type: volume
        source: postgres_store
        target: /var/lib/postgresql/data
  
  jupyter:
    build: ./jupyter
    image: jupyter/minimal-notebook
    command: start-notebook.sh --NotebookApp.token=''
    ports:
      - 8888:8888
    volumes:
      - ./jupyter/:/jupyter
    depends_on:
      - db
      - weather
    environment:
      PG_HOST: db
      PG_DATABASE: weather
      PG_USER: postgres
      PG_PASSWORD: postgres
      API_KEY: MD8gOfRQx4yZ0lS8CfXv6OkVtBLCIdw8 

volumes:
  postgres_store:


# networks:
#   weather-dev:
#     name: weather-dev